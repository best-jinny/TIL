Greedy Algorithm 
큰 수의 법칙
1) 다양한 수로 이루어진 배열이 있을 때 주어진 수들을 M번 더하여 가장 큰 수를 만드는 법칙
2) 단, 배열의 특정한 인덱스에 해당하는 수가 연속해서 K번을 초과하여 더해질 수 없음
3) 서로 다른 인덱스에 해당하는 수가 같은 경우, 서로 다른 것으로 간주

ex) M=7, K=2 [3,4,3,4,3] 4+4+4+4+4+4+4 = 28
ex) M=8, K=3 [2,4,5,4,6] 6+6+6+5+6+6+6+5 = 46

1. 첫째 줄에 N,M,K의 자연수가 주어지며 각 자연수는 공백으로 구분
2. 둘째 줄에 N개의 자연수가 주어짐. 공백으로 구분
3. 입력으로 주어지는 K는 항상 M보다 작다
4. 큰 수의 법칙에 따라 더해진 값 출력

# Answer

# N, M, K 를 공백으로 구분하여 입력 받기
n, m, k = map(int, input().split())

# N개의 수를 공백으로 구분하여 입력 받기
data = list(map(int, input().split()))

# 입력 받은 수 정렬
data.sort() 

# 가장 큰 수
first = data[n-1] 
# 두번째로 큰 수
second = data[n-2]

# 가장 큰 수가 더해지는 횟수 계산
count = int(m/(k+1))*k
count += m%(k+1)

result = 0
# 가장 큰 수 더하기
result += (count) * first
# 두 번째로 큰 수 더하기
result += (m-count) * second
