1. cookie
http 프로토콜은 stateless -> 서버로 가는 모든 요청이 이전 request와 독립적으로 다뤄짐. 
서버에 request 할 때마다 우리가 누군지 알려줘야함. 
클라이언트에서 request를 보내면 서버는 response에 쿠키 정보를 보낼 수 있음
브라우저는 이 쿠키 정보를 이용해서 상태 관리를 할 수 있음.
유효기간 있음(서버가 정함)
브라우저에 존재. 네이티브 앱에는 없음 (-> 토큰 사용)

2. session
유저가 로그인하면 session DB에 session id 생성
session id를 쿠키로 전달하여 유저 정보를 확인함
세션을 사용하면 현재 로그인한 유저들의 모든 세션 id를 DB에 저장해야 하고
요청이 있을 때마다 DB에서 session 정보를 찾아야 함. 유저가 많아지면 DB resource도 많이 필요.
(이를 위한 DB가 redis : cheap, fast)
장점) 로그인된 모든 디바이스에서 강제 로그아웃 기능, 넷플릭스 계정공유수 제한 등 가능

3. JWT
유저가 로그인하면 signed info를 전달(jwt : 공간 제약 없기 때문에 very very long string. 암호화x)
유저를 인증하는 데 필요한 정보를 토큰에 저장하여 해당 토큰이 유효한지만 검증
세션 DB가 필요 없음
QR체크인 등에 사용
