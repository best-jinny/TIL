재귀 (Recursion)

재귀 함수는 자기 자신을 호출하는 함수.
재귀 함수에는 recursive case와 base case 가 있음.

* Recursive case: 현 문제가 너무 커서, 같은 형태의 더 작은 부분 문제를 재귀적으로 푸는 경우
* Base case: 이미 문제가 충분히 작아서, 더 작은 부분 문제로 나누지 않고도 바로 답을 알 수 있는 경우

재귀적으로 문제를 푼다는 것?

같은 형태의 더 작은 문제를 풀고
부분문제의 답을 이용해서 기존 문제의 답을 찾는 것.

ex. 팩토리얼(n!) 문제

n = 0 인 경우 n! = 1              (( base case))
n > 0 인 경우 n! = (n-1)!*n       (( recursive case ))

[코드]

def factorial(n):
  if n==0 :
    return 1
  return factorial(n-1)*n
  
print(factorial(4))




* 피보나치수열: 첫 번째 항과 두 번째 항이 1이고, 세 번째 항부터는 바로 앞의 두 항의 합으로 정의된 수열

[문제] 파라미터로 1이상의 자연수 n을 받고, n번째 피보나치 수를 리턴하는 재귀 함수 fib

# n번째 피보나치 수를 리턴
def fib(n):

# 테스트: fib(1)부터 fib(10)까지 출력
for i in range(1, 11):
    print(fib(i))
    
[코드]

def fib(n):
    if n == 1 or n == 2 :
        return 1
    else :
        return fib(n-1) + fib(n-2) 
        
[코드2]

def fib(n):
    if n < 3 :
      return 1
    return fib(n-1) + fin(n-2)
    
    
######

문제해결과정

1. base case가 무엇인가?
2. recursive case 는?
